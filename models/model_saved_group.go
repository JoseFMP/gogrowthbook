/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package models

import (
	"encoding/json"
	"fmt"

	"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the SavedGroup type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &SavedGroup{}

// SavedGroup struct for SavedGroup
type SavedGroup struct {
	Id           interface{} `json:"id"`
	DateCreated  interface{} `json:"dateCreated"`
	DateUpdated  interface{} `json:"dateUpdated"`
	Name         interface{} `json:"name"`
	Source       interface{} `json:"source"`
	Owner        interface{} `json:"owner,omitempty"`
	AttributeKey interface{} `json:"attributeKey"`
	Values       interface{} `json:"values"`
}

type _SavedGroup SavedGroup

// NewSavedGroup instantiates a new SavedGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedGroup(id interface{}, dateCreated interface{}, dateUpdated interface{}, name interface{}, source interface{}, attributeKey interface{}, values interface{}) *SavedGroup {
	this := SavedGroup{}
	this.Id = id
	this.DateCreated = dateCreated
	this.DateUpdated = dateUpdated
	this.Name = name
	this.Source = source
	this.AttributeKey = attributeKey
	this.Values = values
	return &this
}

// NewSavedGroupWithDefaults instantiates a new SavedGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedGroupWithDefaults() *SavedGroup {
	this := SavedGroup{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetIdOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SavedGroup) SetId(v interface{}) {
	o.Id = v
}

// GetDateCreated returns the DateCreated field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetDateCreated() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetDateCreatedOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.DateCreated) {
		return nil, false
	}
	return &o.DateCreated, true
}

// SetDateCreated sets field value
func (o *SavedGroup) SetDateCreated(v interface{}) {
	o.DateCreated = v
}

// GetDateUpdated returns the DateUpdated field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetDateUpdated() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetDateUpdatedOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.DateUpdated) {
		return nil, false
	}
	return &o.DateUpdated, true
}

// SetDateUpdated sets field value
func (o *SavedGroup) SetDateUpdated(v interface{}) {
	o.DateUpdated = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetNameOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SavedGroup) SetName(v interface{}) {
	o.Name = v
}

// GetSource returns the Source field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetSource() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetSourceOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Source) {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SavedGroup) SetSource(v interface{}) {
	o.Source = v
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SavedGroup) GetOwner() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetOwnerOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Owner) {
		return nil, false
	}
	return &o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *SavedGroup) HasOwner() bool {
	if o != nil && common.IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given interface{} and assigns it to the Owner field.
func (o *SavedGroup) SetOwner(v interface{}) {
	o.Owner = v
}

// GetAttributeKey returns the AttributeKey field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetAttributeKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.AttributeKey
}

// GetAttributeKeyOk returns a tuple with the AttributeKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetAttributeKeyOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.AttributeKey) {
		return nil, false
	}
	return &o.AttributeKey, true
}

// SetAttributeKey sets field value
func (o *SavedGroup) SetAttributeKey(v interface{}) {
	o.AttributeKey = v
}

// GetValues returns the Values field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SavedGroup) GetValues() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SavedGroup) GetValuesOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Values) {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *SavedGroup) SetValues(v interface{}) {
	o.Values = v
}

func (o SavedGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SavedGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.AttributeKey != nil {
		toSerialize["attributeKey"] = o.AttributeKey
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

func (o *SavedGroup) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"dateCreated",
		"dateUpdated",
		"name",
		"source",
		"attributeKey",
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSavedGroup := _SavedGroup{}

	err = json.Unmarshal(bytes, &varSavedGroup)

	if err != nil {
		return err
	}

	*o = SavedGroup(varSavedGroup)

	return err
}

type NullableSavedGroup struct {
	value *SavedGroup
	isSet bool
}

func (v NullableSavedGroup) Get() *SavedGroup {
	return v.value
}

func (v *NullableSavedGroup) Set(val *SavedGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedGroup(val *SavedGroup) *NullableSavedGroup {
	return &NullableSavedGroup{value: val, isSet: true}
}

func (v NullableSavedGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
