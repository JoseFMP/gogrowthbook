/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the PostFeatureRequestEnvironmentsValueDraft type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &PostFeatureRequestEnvironmentsValueDraft{}

// PostFeatureRequestEnvironmentsValueDraft Use to write draft changes without publishing them.
type PostFeatureRequestEnvironmentsValueDraft struct {
	Enabled *bool `json:"enabled,omitempty"`
	Rules []*FeatureRule `json:"rules"`
	// A JSON stringified [FeatureDefinition](#tag/FeatureDefinition_model)
	Definition *string `json:"definition,omitempty"`
}

type _PostFeatureRequestEnvironmentsValueDraft PostFeatureRequestEnvironmentsValueDraft

// NewPostFeatureRequestEnvironmentsValueDraft instantiates a new PostFeatureRequestEnvironmentsValueDraft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFeatureRequestEnvironmentsValueDraft(rules []*FeatureRule) *PostFeatureRequestEnvironmentsValueDraft {
	this := PostFeatureRequestEnvironmentsValueDraft{}
	this.Rules = rules
	return &this
}

// NewPostFeatureRequestEnvironmentsValueDraftWithDefaults instantiates a new PostFeatureRequestEnvironmentsValueDraft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFeatureRequestEnvironmentsValueDraftWithDefaults() *PostFeatureRequestEnvironmentsValueDraft {
	this := PostFeatureRequestEnvironmentsValueDraft{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PostFeatureRequestEnvironmentsValueDraft) GetEnabled() bool {
	if o == nil || common.IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFeatureRequestEnvironmentsValueDraft) GetEnabledOk() (*bool, bool) {
	if o == nil || common.IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PostFeatureRequestEnvironmentsValueDraft) HasEnabled() bool {
	if o != nil && !common.IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PostFeatureRequestEnvironmentsValueDraft) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRules returns the Rules field value
func (o *PostFeatureRequestEnvironmentsValueDraft) GetRules() []*FeatureRule {
	if o == nil {
		var ret []*FeatureRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *PostFeatureRequestEnvironmentsValueDraft) GetRulesOk() ([]*FeatureRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *PostFeatureRequestEnvironmentsValueDraft) SetRules(v []*FeatureRule) {
	o.Rules = v
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *PostFeatureRequestEnvironmentsValueDraft) GetDefinition() string {
	if o == nil || common.IsNil(o.Definition) {
		var ret string
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFeatureRequestEnvironmentsValueDraft) GetDefinitionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *PostFeatureRequestEnvironmentsValueDraft) HasDefinition() bool {
	if o != nil && !common.IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given string and assigns it to the Definition field.
func (o *PostFeatureRequestEnvironmentsValueDraft) SetDefinition(v string) {
	o.Definition = &v
}

func (o PostFeatureRequestEnvironmentsValueDraft) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFeatureRequestEnvironmentsValueDraft) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["rules"] = o.Rules
	if !common.IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	return toSerialize, nil
}

func (o *PostFeatureRequestEnvironmentsValueDraft) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFeatureRequestEnvironmentsValueDraft := _PostFeatureRequestEnvironmentsValueDraft{}

	err = json.Unmarshal(bytes, &varPostFeatureRequestEnvironmentsValueDraft)

	if err != nil {
		return err
	}

	*o = PostFeatureRequestEnvironmentsValueDraft(varPostFeatureRequestEnvironmentsValueDraft)

	return err
}

type NullablePostFeatureRequestEnvironmentsValueDraft struct {
	value *PostFeatureRequestEnvironmentsValueDraft
	isSet bool
}

func (v NullablePostFeatureRequestEnvironmentsValueDraft) Get() *PostFeatureRequestEnvironmentsValueDraft {
	return v.value
}

func (v *NullablePostFeatureRequestEnvironmentsValueDraft) Set(val *PostFeatureRequestEnvironmentsValueDraft) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFeatureRequestEnvironmentsValueDraft) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFeatureRequestEnvironmentsValueDraft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFeatureRequestEnvironmentsValueDraft(val *PostFeatureRequestEnvironmentsValueDraft) *NullablePostFeatureRequestEnvironmentsValueDraft {
	return &NullablePostFeatureRequestEnvironmentsValueDraft{value: val, isSet: true}
}

func (v NullablePostFeatureRequestEnvironmentsValueDraft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFeatureRequestEnvironmentsValueDraft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


