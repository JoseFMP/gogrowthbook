/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the PostExperimentRequestPhasesInner type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &PostExperimentRequestPhasesInner{}

// PostExperimentRequestPhasesInner struct for PostExperimentRequestPhasesInner
type PostExperimentRequestPhasesInner struct {
	Name string `json:"name"`
	DateStarted string `json:"dateStarted"`
	DateEnded *string `json:"dateEnded,omitempty"`
	ReasonForStopping *string `json:"reasonForStopping,omitempty"`
	Seed *string `json:"seed,omitempty"`
	Coverage *float32 `json:"coverage,omitempty"`
	TrafficSplit []PostExperimentRequestPhasesInnerTrafficSplitInner `json:"trafficSplit,omitempty"`
	Namespace *PostExperimentRequestPhasesInnerNamespace `json:"namespace,omitempty"`
	TargetingCondition *string `json:"targetingCondition,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Condition *string `json:"condition,omitempty"`
	SavedGroupTargeting []PostExperimentRequestPhasesInnerSavedGroupTargetingInner `json:"savedGroupTargeting,omitempty"`
	VariationWeights []float32 `json:"variationWeights,omitempty"`
}

type _PostExperimentRequestPhasesInner PostExperimentRequestPhasesInner

// NewPostExperimentRequestPhasesInner instantiates a new PostExperimentRequestPhasesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostExperimentRequestPhasesInner(name string, dateStarted string) *PostExperimentRequestPhasesInner {
	this := PostExperimentRequestPhasesInner{}
	this.Name = name
	this.DateStarted = dateStarted
	return &this
}

// NewPostExperimentRequestPhasesInnerWithDefaults instantiates a new PostExperimentRequestPhasesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostExperimentRequestPhasesInnerWithDefaults() *PostExperimentRequestPhasesInner {
	this := PostExperimentRequestPhasesInner{}
	return &this
}

// GetName returns the Name field value
func (o *PostExperimentRequestPhasesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostExperimentRequestPhasesInner) SetName(v string) {
	o.Name = v
}

// GetDateStarted returns the DateStarted field value
func (o *PostExperimentRequestPhasesInner) GetDateStarted() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateStarted
}

// GetDateStartedOk returns a tuple with the DateStarted field value
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetDateStartedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateStarted, true
}

// SetDateStarted sets field value
func (o *PostExperimentRequestPhasesInner) SetDateStarted(v string) {
	o.DateStarted = v
}

// GetDateEnded returns the DateEnded field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetDateEnded() string {
	if o == nil || common.IsNil(o.DateEnded) {
		var ret string
		return ret
	}
	return *o.DateEnded
}

// GetDateEndedOk returns a tuple with the DateEnded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetDateEndedOk() (*string, bool) {
	if o == nil || common.IsNil(o.DateEnded) {
		return nil, false
	}
	return o.DateEnded, true
}

// HasDateEnded returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasDateEnded() bool {
	if o != nil && !common.IsNil(o.DateEnded) {
		return true
	}

	return false
}

// SetDateEnded gets a reference to the given string and assigns it to the DateEnded field.
func (o *PostExperimentRequestPhasesInner) SetDateEnded(v string) {
	o.DateEnded = &v
}

// GetReasonForStopping returns the ReasonForStopping field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetReasonForStopping() string {
	if o == nil || common.IsNil(o.ReasonForStopping) {
		var ret string
		return ret
	}
	return *o.ReasonForStopping
}

// GetReasonForStoppingOk returns a tuple with the ReasonForStopping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetReasonForStoppingOk() (*string, bool) {
	if o == nil || common.IsNil(o.ReasonForStopping) {
		return nil, false
	}
	return o.ReasonForStopping, true
}

// HasReasonForStopping returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasReasonForStopping() bool {
	if o != nil && !common.IsNil(o.ReasonForStopping) {
		return true
	}

	return false
}

// SetReasonForStopping gets a reference to the given string and assigns it to the ReasonForStopping field.
func (o *PostExperimentRequestPhasesInner) SetReasonForStopping(v string) {
	o.ReasonForStopping = &v
}

// GetSeed returns the Seed field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetSeed() string {
	if o == nil || common.IsNil(o.Seed) {
		var ret string
		return ret
	}
	return *o.Seed
}

// GetSeedOk returns a tuple with the Seed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetSeedOk() (*string, bool) {
	if o == nil || common.IsNil(o.Seed) {
		return nil, false
	}
	return o.Seed, true
}

// HasSeed returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasSeed() bool {
	if o != nil && !common.IsNil(o.Seed) {
		return true
	}

	return false
}

// SetSeed gets a reference to the given string and assigns it to the Seed field.
func (o *PostExperimentRequestPhasesInner) SetSeed(v string) {
	o.Seed = &v
}

// GetCoverage returns the Coverage field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetCoverage() float32 {
	if o == nil || common.IsNil(o.Coverage) {
		var ret float32
		return ret
	}
	return *o.Coverage
}

// GetCoverageOk returns a tuple with the Coverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetCoverageOk() (*float32, bool) {
	if o == nil || common.IsNil(o.Coverage) {
		return nil, false
	}
	return o.Coverage, true
}

// HasCoverage returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasCoverage() bool {
	if o != nil && !common.IsNil(o.Coverage) {
		return true
	}

	return false
}

// SetCoverage gets a reference to the given float32 and assigns it to the Coverage field.
func (o *PostExperimentRequestPhasesInner) SetCoverage(v float32) {
	o.Coverage = &v
}

// GetTrafficSplit returns the TrafficSplit field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetTrafficSplit() []PostExperimentRequestPhasesInnerTrafficSplitInner {
	if o == nil || common.IsNil(o.TrafficSplit) {
		var ret []PostExperimentRequestPhasesInnerTrafficSplitInner
		return ret
	}
	return o.TrafficSplit
}

// GetTrafficSplitOk returns a tuple with the TrafficSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetTrafficSplitOk() ([]PostExperimentRequestPhasesInnerTrafficSplitInner, bool) {
	if o == nil || common.IsNil(o.TrafficSplit) {
		return nil, false
	}
	return o.TrafficSplit, true
}

// HasTrafficSplit returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasTrafficSplit() bool {
	if o != nil && !common.IsNil(o.TrafficSplit) {
		return true
	}

	return false
}

// SetTrafficSplit gets a reference to the given []PostExperimentRequestPhasesInnerTrafficSplitInner and assigns it to the TrafficSplit field.
func (o *PostExperimentRequestPhasesInner) SetTrafficSplit(v []PostExperimentRequestPhasesInnerTrafficSplitInner) {
	o.TrafficSplit = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetNamespace() PostExperimentRequestPhasesInnerNamespace {
	if o == nil || common.IsNil(o.Namespace) {
		var ret PostExperimentRequestPhasesInnerNamespace
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetNamespaceOk() (*PostExperimentRequestPhasesInnerNamespace, bool) {
	if o == nil || common.IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasNamespace() bool {
	if o != nil && !common.IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given PostExperimentRequestPhasesInnerNamespace and assigns it to the Namespace field.
func (o *PostExperimentRequestPhasesInner) SetNamespace(v PostExperimentRequestPhasesInnerNamespace) {
	o.Namespace = &v
}

// GetTargetingCondition returns the TargetingCondition field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetTargetingCondition() string {
	if o == nil || common.IsNil(o.TargetingCondition) {
		var ret string
		return ret
	}
	return *o.TargetingCondition
}

// GetTargetingConditionOk returns a tuple with the TargetingCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetTargetingConditionOk() (*string, bool) {
	if o == nil || common.IsNil(o.TargetingCondition) {
		return nil, false
	}
	return o.TargetingCondition, true
}

// HasTargetingCondition returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasTargetingCondition() bool {
	if o != nil && !common.IsNil(o.TargetingCondition) {
		return true
	}

	return false
}

// SetTargetingCondition gets a reference to the given string and assigns it to the TargetingCondition field.
func (o *PostExperimentRequestPhasesInner) SetTargetingCondition(v string) {
	o.TargetingCondition = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetReason() string {
	if o == nil || common.IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetReasonOk() (*string, bool) {
	if o == nil || common.IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasReason() bool {
	if o != nil && !common.IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *PostExperimentRequestPhasesInner) SetReason(v string) {
	o.Reason = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetCondition() string {
	if o == nil || common.IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetConditionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasCondition() bool {
	if o != nil && !common.IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *PostExperimentRequestPhasesInner) SetCondition(v string) {
	o.Condition = &v
}

// GetSavedGroupTargeting returns the SavedGroupTargeting field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetSavedGroupTargeting() []PostExperimentRequestPhasesInnerSavedGroupTargetingInner {
	if o == nil || common.IsNil(o.SavedGroupTargeting) {
		var ret []PostExperimentRequestPhasesInnerSavedGroupTargetingInner
		return ret
	}
	return o.SavedGroupTargeting
}

// GetSavedGroupTargetingOk returns a tuple with the SavedGroupTargeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetSavedGroupTargetingOk() ([]PostExperimentRequestPhasesInnerSavedGroupTargetingInner, bool) {
	if o == nil || common.IsNil(o.SavedGroupTargeting) {
		return nil, false
	}
	return o.SavedGroupTargeting, true
}

// HasSavedGroupTargeting returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasSavedGroupTargeting() bool {
	if o != nil && !common.IsNil(o.SavedGroupTargeting) {
		return true
	}

	return false
}

// SetSavedGroupTargeting gets a reference to the given []PostExperimentRequestPhasesInnerSavedGroupTargetingInner and assigns it to the SavedGroupTargeting field.
func (o *PostExperimentRequestPhasesInner) SetSavedGroupTargeting(v []PostExperimentRequestPhasesInnerSavedGroupTargetingInner) {
	o.SavedGroupTargeting = v
}

// GetVariationWeights returns the VariationWeights field value if set, zero value otherwise.
func (o *PostExperimentRequestPhasesInner) GetVariationWeights() []float32 {
	if o == nil || common.IsNil(o.VariationWeights) {
		var ret []float32
		return ret
	}
	return o.VariationWeights
}

// GetVariationWeightsOk returns a tuple with the VariationWeights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostExperimentRequestPhasesInner) GetVariationWeightsOk() ([]float32, bool) {
	if o == nil || common.IsNil(o.VariationWeights) {
		return nil, false
	}
	return o.VariationWeights, true
}

// HasVariationWeights returns a boolean if a field has been set.
func (o *PostExperimentRequestPhasesInner) HasVariationWeights() bool {
	if o != nil && !common.IsNil(o.VariationWeights) {
		return true
	}

	return false
}

// SetVariationWeights gets a reference to the given []float32 and assigns it to the VariationWeights field.
func (o *PostExperimentRequestPhasesInner) SetVariationWeights(v []float32) {
	o.VariationWeights = v
}

func (o PostExperimentRequestPhasesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostExperimentRequestPhasesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["dateStarted"] = o.DateStarted
	if !common.IsNil(o.DateEnded) {
		toSerialize["dateEnded"] = o.DateEnded
	}
	if !common.IsNil(o.ReasonForStopping) {
		toSerialize["reasonForStopping"] = o.ReasonForStopping
	}
	if !common.IsNil(o.Seed) {
		toSerialize["seed"] = o.Seed
	}
	if !common.IsNil(o.Coverage) {
		toSerialize["coverage"] = o.Coverage
	}
	if !common.IsNil(o.TrafficSplit) {
		toSerialize["trafficSplit"] = o.TrafficSplit
	}
	if !common.IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !common.IsNil(o.TargetingCondition) {
		toSerialize["targetingCondition"] = o.TargetingCondition
	}
	if !common.IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !common.IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !common.IsNil(o.SavedGroupTargeting) {
		toSerialize["savedGroupTargeting"] = o.SavedGroupTargeting
	}
	if !common.IsNil(o.VariationWeights) {
		toSerialize["variationWeights"] = o.VariationWeights
	}
	return toSerialize, nil
}

func (o *PostExperimentRequestPhasesInner) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"dateStarted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostExperimentRequestPhasesInner := _PostExperimentRequestPhasesInner{}

	err = json.Unmarshal(bytes, &varPostExperimentRequestPhasesInner)

	if err != nil {
		return err
	}

	*o = PostExperimentRequestPhasesInner(varPostExperimentRequestPhasesInner)

	return err
}

type NullablePostExperimentRequestPhasesInner struct {
	value *PostExperimentRequestPhasesInner
	isSet bool
}

func (v NullablePostExperimentRequestPhasesInner) Get() *PostExperimentRequestPhasesInner {
	return v.value
}

func (v *NullablePostExperimentRequestPhasesInner) Set(val *PostExperimentRequestPhasesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostExperimentRequestPhasesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostExperimentRequestPhasesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostExperimentRequestPhasesInner(val *PostExperimentRequestPhasesInner) *NullablePostExperimentRequestPhasesInner {
	return &NullablePostExperimentRequestPhasesInner{value: val, isSet: true}
}

func (v NullablePostExperimentRequestPhasesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostExperimentRequestPhasesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


