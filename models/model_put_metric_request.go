/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the PutMetricRequest type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &PutMetricRequest{}

// PutMetricRequest struct for PutMetricRequest
type PutMetricRequest struct {
	// Name of the person who owns this metric
	Owner *string `json:"owner,omitempty"`
	// Name of the metric
	Name *string `json:"name,omitempty"`
	// Description of the metric
	Description *string `json:"description,omitempty"`
	// Type of metric. See [Metrics documentation](/app/metrics)
	Type *string `json:"type,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Projects []string `json:"projects,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	Behavior *PutMetricRequestBehavior `json:"behavior,omitempty"`
	Sql *PutMetricRequestSql `json:"sql,omitempty"`
	SqlBuilder *PutMetricRequestSqlBuilder `json:"sqlBuilder,omitempty"`
	Mixpanel *PutMetricRequestMixpanel `json:"mixpanel,omitempty"`
}

// NewPutMetricRequest instantiates a new PutMetricRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutMetricRequest() *PutMetricRequest {
	this := PutMetricRequest{}
	return &this
}

// NewPutMetricRequestWithDefaults instantiates a new PutMetricRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutMetricRequestWithDefaults() *PutMetricRequest {
	this := PutMetricRequest{}
	return &this
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PutMetricRequest) GetOwner() string {
	if o == nil || common.IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetOwnerOk() (*string, bool) {
	if o == nil || common.IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PutMetricRequest) HasOwner() bool {
	if o != nil && !common.IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *PutMetricRequest) SetOwner(v string) {
	o.Owner = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PutMetricRequest) GetName() string {
	if o == nil || common.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetNameOk() (*string, bool) {
	if o == nil || common.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PutMetricRequest) HasName() bool {
	if o != nil && !common.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PutMetricRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PutMetricRequest) GetDescription() string {
	if o == nil || common.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PutMetricRequest) HasDescription() bool {
	if o != nil && !common.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PutMetricRequest) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PutMetricRequest) GetType() string {
	if o == nil || common.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetTypeOk() (*string, bool) {
	if o == nil || common.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PutMetricRequest) HasType() bool {
	if o != nil && !common.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PutMetricRequest) SetType(v string) {
	o.Type = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PutMetricRequest) GetTags() []string {
	if o == nil || common.IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetTagsOk() ([]string, bool) {
	if o == nil || common.IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PutMetricRequest) HasTags() bool {
	if o != nil && !common.IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PutMetricRequest) SetTags(v []string) {
	o.Tags = v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *PutMetricRequest) GetProjects() []string {
	if o == nil || common.IsNil(o.Projects) {
		var ret []string
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetProjectsOk() ([]string, bool) {
	if o == nil || common.IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *PutMetricRequest) HasProjects() bool {
	if o != nil && !common.IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []string and assigns it to the Projects field.
func (o *PutMetricRequest) SetProjects(v []string) {
	o.Projects = v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *PutMetricRequest) GetArchived() bool {
	if o == nil || common.IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetArchivedOk() (*bool, bool) {
	if o == nil || common.IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *PutMetricRequest) HasArchived() bool {
	if o != nil && !common.IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *PutMetricRequest) SetArchived(v bool) {
	o.Archived = &v
}

// GetBehavior returns the Behavior field value if set, zero value otherwise.
func (o *PutMetricRequest) GetBehavior() PutMetricRequestBehavior {
	if o == nil || common.IsNil(o.Behavior) {
		var ret PutMetricRequestBehavior
		return ret
	}
	return *o.Behavior
}

// GetBehaviorOk returns a tuple with the Behavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetBehaviorOk() (*PutMetricRequestBehavior, bool) {
	if o == nil || common.IsNil(o.Behavior) {
		return nil, false
	}
	return o.Behavior, true
}

// HasBehavior returns a boolean if a field has been set.
func (o *PutMetricRequest) HasBehavior() bool {
	if o != nil && !common.IsNil(o.Behavior) {
		return true
	}

	return false
}

// SetBehavior gets a reference to the given PutMetricRequestBehavior and assigns it to the Behavior field.
func (o *PutMetricRequest) SetBehavior(v PutMetricRequestBehavior) {
	o.Behavior = &v
}

// GetSql returns the Sql field value if set, zero value otherwise.
func (o *PutMetricRequest) GetSql() PutMetricRequestSql {
	if o == nil || common.IsNil(o.Sql) {
		var ret PutMetricRequestSql
		return ret
	}
	return *o.Sql
}

// GetSqlOk returns a tuple with the Sql field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetSqlOk() (*PutMetricRequestSql, bool) {
	if o == nil || common.IsNil(o.Sql) {
		return nil, false
	}
	return o.Sql, true
}

// HasSql returns a boolean if a field has been set.
func (o *PutMetricRequest) HasSql() bool {
	if o != nil && !common.IsNil(o.Sql) {
		return true
	}

	return false
}

// SetSql gets a reference to the given PutMetricRequestSql and assigns it to the Sql field.
func (o *PutMetricRequest) SetSql(v PutMetricRequestSql) {
	o.Sql = &v
}

// GetSqlBuilder returns the SqlBuilder field value if set, zero value otherwise.
func (o *PutMetricRequest) GetSqlBuilder() PutMetricRequestSqlBuilder {
	if o == nil || common.IsNil(o.SqlBuilder) {
		var ret PutMetricRequestSqlBuilder
		return ret
	}
	return *o.SqlBuilder
}

// GetSqlBuilderOk returns a tuple with the SqlBuilder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetSqlBuilderOk() (*PutMetricRequestSqlBuilder, bool) {
	if o == nil || common.IsNil(o.SqlBuilder) {
		return nil, false
	}
	return o.SqlBuilder, true
}

// HasSqlBuilder returns a boolean if a field has been set.
func (o *PutMetricRequest) HasSqlBuilder() bool {
	if o != nil && !common.IsNil(o.SqlBuilder) {
		return true
	}

	return false
}

// SetSqlBuilder gets a reference to the given PutMetricRequestSqlBuilder and assigns it to the SqlBuilder field.
func (o *PutMetricRequest) SetSqlBuilder(v PutMetricRequestSqlBuilder) {
	o.SqlBuilder = &v
}

// GetMixpanel returns the Mixpanel field value if set, zero value otherwise.
func (o *PutMetricRequest) GetMixpanel() PutMetricRequestMixpanel {
	if o == nil || common.IsNil(o.Mixpanel) {
		var ret PutMetricRequestMixpanel
		return ret
	}
	return *o.Mixpanel
}

// GetMixpanelOk returns a tuple with the Mixpanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutMetricRequest) GetMixpanelOk() (*PutMetricRequestMixpanel, bool) {
	if o == nil || common.IsNil(o.Mixpanel) {
		return nil, false
	}
	return o.Mixpanel, true
}

// HasMixpanel returns a boolean if a field has been set.
func (o *PutMetricRequest) HasMixpanel() bool {
	if o != nil && !common.IsNil(o.Mixpanel) {
		return true
	}

	return false
}

// SetMixpanel gets a reference to the given PutMetricRequestMixpanel and assigns it to the Mixpanel field.
func (o *PutMetricRequest) SetMixpanel(v PutMetricRequestMixpanel) {
	o.Mixpanel = &v
}

func (o PutMetricRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutMetricRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !common.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !common.IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !common.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !common.IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !common.IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	if !common.IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !common.IsNil(o.Behavior) {
		toSerialize["behavior"] = o.Behavior
	}
	if !common.IsNil(o.Sql) {
		toSerialize["sql"] = o.Sql
	}
	if !common.IsNil(o.SqlBuilder) {
		toSerialize["sqlBuilder"] = o.SqlBuilder
	}
	if !common.IsNil(o.Mixpanel) {
		toSerialize["mixpanel"] = o.Mixpanel
	}
	return toSerialize, nil
}

type NullablePutMetricRequest struct {
	value *PutMetricRequest
	isSet bool
}

func (v NullablePutMetricRequest) Get() *PutMetricRequest {
	return v.value
}

func (v *NullablePutMetricRequest) Set(val *PutMetricRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutMetricRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutMetricRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutMetricRequest(val *PutMetricRequest) *NullablePutMetricRequest {
	return &NullablePutMetricRequest{value: val, isSet: true}
}

func (v NullablePutMetricRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutMetricRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


