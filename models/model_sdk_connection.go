/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the SdkConnection type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &SdkConnection{}

// SdkConnection struct for SdkConnection
type SdkConnection struct {
	Id interface{} `json:"id"`
	DateCreated interface{} `json:"dateCreated"`
	DateUpdated interface{} `json:"dateUpdated"`
	Name interface{} `json:"name"`
	Organization interface{} `json:"organization"`
	Languages interface{} `json:"languages"`
	Environment interface{} `json:"environment"`
	// Use 'projects' instead. This is only for backwards compatibility and contains the first project only.
	Project interface{} `json:"project"`
	Projects interface{} `json:"projects,omitempty"`
	EncryptPayload interface{} `json:"encryptPayload"`
	EncryptionKey interface{} `json:"encryptionKey"`
	IncludeVisualExperiments interface{} `json:"includeVisualExperiments,omitempty"`
	IncludeDraftExperiments interface{} `json:"includeDraftExperiments,omitempty"`
	IncludeExperimentNames interface{} `json:"includeExperimentNames,omitempty"`
	Key interface{} `json:"key"`
	ProxyEnabled interface{} `json:"proxyEnabled"`
	ProxyHost interface{} `json:"proxyHost"`
	ProxySigningKey interface{} `json:"proxySigningKey"`
	SseEnabled interface{} `json:"sseEnabled,omitempty"`
	HashSecureAttributes interface{} `json:"hashSecureAttributes,omitempty"`
	RemoteEvalEnabled interface{} `json:"remoteEvalEnabled,omitempty"`
}

type _SdkConnection SdkConnection

// NewSdkConnection instantiates a new SdkConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdkConnection(id interface{}, dateCreated interface{}, dateUpdated interface{}, name interface{}, organization interface{}, languages interface{}, environment interface{}, project interface{}, encryptPayload interface{}, encryptionKey interface{}, key interface{}, proxyEnabled interface{}, proxyHost interface{}, proxySigningKey interface{}) *SdkConnection {
	this := SdkConnection{}
	this.Id = id
	this.DateCreated = dateCreated
	this.DateUpdated = dateUpdated
	this.Name = name
	this.Organization = organization
	this.Languages = languages
	this.Environment = environment
	this.Project = project
	this.EncryptPayload = encryptPayload
	this.EncryptionKey = encryptionKey
	this.Key = key
	this.ProxyEnabled = proxyEnabled
	this.ProxyHost = proxyHost
	this.ProxySigningKey = proxySigningKey
	return &this
}

// NewSdkConnectionWithDefaults instantiates a new SdkConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdkConnectionWithDefaults() *SdkConnection {
	this := SdkConnection{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetIdOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SdkConnection) SetId(v interface{}) {
	o.Id = v
}

// GetDateCreated returns the DateCreated field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetDateCreated() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetDateCreatedOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.DateCreated) {
		return nil, false
	}
	return &o.DateCreated, true
}

// SetDateCreated sets field value
func (o *SdkConnection) SetDateCreated(v interface{}) {
	o.DateCreated = v
}

// GetDateUpdated returns the DateUpdated field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetDateUpdated() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetDateUpdatedOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.DateUpdated) {
		return nil, false
	}
	return &o.DateUpdated, true
}

// SetDateUpdated sets field value
func (o *SdkConnection) SetDateUpdated(v interface{}) {
	o.DateUpdated = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetNameOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SdkConnection) SetName(v interface{}) {
	o.Name = v
}

// GetOrganization returns the Organization field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetOrganization() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetOrganizationOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Organization) {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *SdkConnection) SetOrganization(v interface{}) {
	o.Organization = v
}

// GetLanguages returns the Languages field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetLanguages() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetLanguagesOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Languages) {
		return nil, false
	}
	return &o.Languages, true
}

// SetLanguages sets field value
func (o *SdkConnection) SetLanguages(v interface{}) {
	o.Languages = v
}

// GetEnvironment returns the Environment field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetEnvironment() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetEnvironmentOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Environment) {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *SdkConnection) SetEnvironment(v interface{}) {
	o.Environment = v
}

// GetProject returns the Project field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetProject() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetProjectOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Project) {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *SdkConnection) SetProject(v interface{}) {
	o.Project = v
}

// GetProjects returns the Projects field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetProjects() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetProjectsOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Projects) {
		return nil, false
	}
	return &o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *SdkConnection) HasProjects() bool {
	if o != nil && common.IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given interface{} and assigns it to the Projects field.
func (o *SdkConnection) SetProjects(v interface{}) {
	o.Projects = v
}

// GetEncryptPayload returns the EncryptPayload field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetEncryptPayload() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.EncryptPayload
}

// GetEncryptPayloadOk returns a tuple with the EncryptPayload field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetEncryptPayloadOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.EncryptPayload) {
		return nil, false
	}
	return &o.EncryptPayload, true
}

// SetEncryptPayload sets field value
func (o *SdkConnection) SetEncryptPayload(v interface{}) {
	o.EncryptPayload = v
}

// GetEncryptionKey returns the EncryptionKey field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetEncryptionKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetEncryptionKeyOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.EncryptionKey) {
		return nil, false
	}
	return &o.EncryptionKey, true
}

// SetEncryptionKey sets field value
func (o *SdkConnection) SetEncryptionKey(v interface{}) {
	o.EncryptionKey = v
}

// GetIncludeVisualExperiments returns the IncludeVisualExperiments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetIncludeVisualExperiments() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IncludeVisualExperiments
}

// GetIncludeVisualExperimentsOk returns a tuple with the IncludeVisualExperiments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetIncludeVisualExperimentsOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.IncludeVisualExperiments) {
		return nil, false
	}
	return &o.IncludeVisualExperiments, true
}

// HasIncludeVisualExperiments returns a boolean if a field has been set.
func (o *SdkConnection) HasIncludeVisualExperiments() bool {
	if o != nil && common.IsNil(o.IncludeVisualExperiments) {
		return true
	}

	return false
}

// SetIncludeVisualExperiments gets a reference to the given interface{} and assigns it to the IncludeVisualExperiments field.
func (o *SdkConnection) SetIncludeVisualExperiments(v interface{}) {
	o.IncludeVisualExperiments = v
}

// GetIncludeDraftExperiments returns the IncludeDraftExperiments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetIncludeDraftExperiments() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IncludeDraftExperiments
}

// GetIncludeDraftExperimentsOk returns a tuple with the IncludeDraftExperiments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetIncludeDraftExperimentsOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.IncludeDraftExperiments) {
		return nil, false
	}
	return &o.IncludeDraftExperiments, true
}

// HasIncludeDraftExperiments returns a boolean if a field has been set.
func (o *SdkConnection) HasIncludeDraftExperiments() bool {
	if o != nil && common.IsNil(o.IncludeDraftExperiments) {
		return true
	}

	return false
}

// SetIncludeDraftExperiments gets a reference to the given interface{} and assigns it to the IncludeDraftExperiments field.
func (o *SdkConnection) SetIncludeDraftExperiments(v interface{}) {
	o.IncludeDraftExperiments = v
}

// GetIncludeExperimentNames returns the IncludeExperimentNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetIncludeExperimentNames() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IncludeExperimentNames
}

// GetIncludeExperimentNamesOk returns a tuple with the IncludeExperimentNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetIncludeExperimentNamesOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.IncludeExperimentNames) {
		return nil, false
	}
	return &o.IncludeExperimentNames, true
}

// HasIncludeExperimentNames returns a boolean if a field has been set.
func (o *SdkConnection) HasIncludeExperimentNames() bool {
	if o != nil && common.IsNil(o.IncludeExperimentNames) {
		return true
	}

	return false
}

// SetIncludeExperimentNames gets a reference to the given interface{} and assigns it to the IncludeExperimentNames field.
func (o *SdkConnection) SetIncludeExperimentNames(v interface{}) {
	o.IncludeExperimentNames = v
}

// GetKey returns the Key field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetKeyOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.Key) {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *SdkConnection) SetKey(v interface{}) {
	o.Key = v
}

// GetProxyEnabled returns the ProxyEnabled field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetProxyEnabled() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProxyEnabled
}

// GetProxyEnabledOk returns a tuple with the ProxyEnabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetProxyEnabledOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.ProxyEnabled) {
		return nil, false
	}
	return &o.ProxyEnabled, true
}

// SetProxyEnabled sets field value
func (o *SdkConnection) SetProxyEnabled(v interface{}) {
	o.ProxyEnabled = v
}

// GetProxyHost returns the ProxyHost field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetProxyHost() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProxyHost
}

// GetProxyHostOk returns a tuple with the ProxyHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetProxyHostOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.ProxyHost) {
		return nil, false
	}
	return &o.ProxyHost, true
}

// SetProxyHost sets field value
func (o *SdkConnection) SetProxyHost(v interface{}) {
	o.ProxyHost = v
}

// GetProxySigningKey returns the ProxySigningKey field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SdkConnection) GetProxySigningKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProxySigningKey
}

// GetProxySigningKeyOk returns a tuple with the ProxySigningKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetProxySigningKeyOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.ProxySigningKey) {
		return nil, false
	}
	return &o.ProxySigningKey, true
}

// SetProxySigningKey sets field value
func (o *SdkConnection) SetProxySigningKey(v interface{}) {
	o.ProxySigningKey = v
}

// GetSseEnabled returns the SseEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetSseEnabled() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SseEnabled
}

// GetSseEnabledOk returns a tuple with the SseEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetSseEnabledOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.SseEnabled) {
		return nil, false
	}
	return &o.SseEnabled, true
}

// HasSseEnabled returns a boolean if a field has been set.
func (o *SdkConnection) HasSseEnabled() bool {
	if o != nil && common.IsNil(o.SseEnabled) {
		return true
	}

	return false
}

// SetSseEnabled gets a reference to the given interface{} and assigns it to the SseEnabled field.
func (o *SdkConnection) SetSseEnabled(v interface{}) {
	o.SseEnabled = v
}

// GetHashSecureAttributes returns the HashSecureAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetHashSecureAttributes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.HashSecureAttributes
}

// GetHashSecureAttributesOk returns a tuple with the HashSecureAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetHashSecureAttributesOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.HashSecureAttributes) {
		return nil, false
	}
	return &o.HashSecureAttributes, true
}

// HasHashSecureAttributes returns a boolean if a field has been set.
func (o *SdkConnection) HasHashSecureAttributes() bool {
	if o != nil && common.IsNil(o.HashSecureAttributes) {
		return true
	}

	return false
}

// SetHashSecureAttributes gets a reference to the given interface{} and assigns it to the HashSecureAttributes field.
func (o *SdkConnection) SetHashSecureAttributes(v interface{}) {
	o.HashSecureAttributes = v
}

// GetRemoteEvalEnabled returns the RemoteEvalEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkConnection) GetRemoteEvalEnabled() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RemoteEvalEnabled
}

// GetRemoteEvalEnabledOk returns a tuple with the RemoteEvalEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkConnection) GetRemoteEvalEnabledOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.RemoteEvalEnabled) {
		return nil, false
	}
	return &o.RemoteEvalEnabled, true
}

// HasRemoteEvalEnabled returns a boolean if a field has been set.
func (o *SdkConnection) HasRemoteEvalEnabled() bool {
	if o != nil && common.IsNil(o.RemoteEvalEnabled) {
		return true
	}

	return false
}

// SetRemoteEvalEnabled gets a reference to the given interface{} and assigns it to the RemoteEvalEnabled field.
func (o *SdkConnection) SetRemoteEvalEnabled(v interface{}) {
	o.RemoteEvalEnabled = v
}

func (o SdkConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdkConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.DateUpdated != nil {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Languages != nil {
		toSerialize["languages"] = o.Languages
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	if o.EncryptPayload != nil {
		toSerialize["encryptPayload"] = o.EncryptPayload
	}
	if o.EncryptionKey != nil {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	if o.IncludeVisualExperiments != nil {
		toSerialize["includeVisualExperiments"] = o.IncludeVisualExperiments
	}
	if o.IncludeDraftExperiments != nil {
		toSerialize["includeDraftExperiments"] = o.IncludeDraftExperiments
	}
	if o.IncludeExperimentNames != nil {
		toSerialize["includeExperimentNames"] = o.IncludeExperimentNames
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.ProxyEnabled != nil {
		toSerialize["proxyEnabled"] = o.ProxyEnabled
	}
	if o.ProxyHost != nil {
		toSerialize["proxyHost"] = o.ProxyHost
	}
	if o.ProxySigningKey != nil {
		toSerialize["proxySigningKey"] = o.ProxySigningKey
	}
	if o.SseEnabled != nil {
		toSerialize["sseEnabled"] = o.SseEnabled
	}
	if o.HashSecureAttributes != nil {
		toSerialize["hashSecureAttributes"] = o.HashSecureAttributes
	}
	if o.RemoteEvalEnabled != nil {
		toSerialize["remoteEvalEnabled"] = o.RemoteEvalEnabled
	}
	return toSerialize, nil
}

func (o *SdkConnection) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"dateCreated",
		"dateUpdated",
		"name",
		"organization",
		"languages",
		"environment",
		"project",
		"encryptPayload",
		"encryptionKey",
		"key",
		"proxyEnabled",
		"proxyHost",
		"proxySigningKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSdkConnection := _SdkConnection{}

	err = json.Unmarshal(bytes, &varSdkConnection)

	if err != nil {
		return err
	}

	*o = SdkConnection(varSdkConnection)

	return err
}

type NullableSdkConnection struct {
	value *SdkConnection
	isSet bool
}

func (v NullableSdkConnection) Get() *SdkConnection {
	return v.value
}

func (v *NullableSdkConnection) Set(val *SdkConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableSdkConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableSdkConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdkConnection(val *SdkConnection) *NullableSdkConnection {
	return &NullableSdkConnection{value: val, isSet: true}
}

func (v NullableSdkConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdkConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


