/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package models

import (
	"encoding/json"
	"fmt"

	"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the PostSavedGroupRequest type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &PostSavedGroupRequest{}

// PostSavedGroupRequest struct for PostSavedGroupRequest
type PostSavedGroupRequest struct {
	// The display name of the Saved Group
	Name   string   `json:"name"`
	Source *string  `json:"source,omitempty"`
	Values []string `json:"values,omitempty"`
	// For inline groups, the name of the attribute the values belong to (e.g. `user_id`). For runtime groups, the group name you reference in your code
	AttributeKey string `json:"attributeKey"`
	// The person or team that owns this Saved Group. If no owner, you can pass an empty string.
	Owner *string `json:"owner,omitempty"`
}

type _PostSavedGroupRequest PostSavedGroupRequest

// NewPostSavedGroupRequest instantiates a new PostSavedGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostSavedGroupRequest(name string, attributeKey string) *PostSavedGroupRequest {
	this := PostSavedGroupRequest{}
	this.Name = name
	this.AttributeKey = attributeKey
	return &this
}

// NewPostSavedGroupRequestWithDefaults instantiates a new PostSavedGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostSavedGroupRequestWithDefaults() *PostSavedGroupRequest {
	this := PostSavedGroupRequest{}
	return &this
}

// GetName returns the Name field value
func (o *PostSavedGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostSavedGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostSavedGroupRequest) SetName(v string) {
	o.Name = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PostSavedGroupRequest) GetSource() string {
	if o == nil || common.IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSavedGroupRequest) GetSourceOk() (*string, bool) {
	if o == nil || common.IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PostSavedGroupRequest) HasSource() bool {
	if o != nil && !common.IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *PostSavedGroupRequest) SetSource(v string) {
	o.Source = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *PostSavedGroupRequest) GetValues() []string {
	if o == nil || common.IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSavedGroupRequest) GetValuesOk() ([]string, bool) {
	if o == nil || common.IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *PostSavedGroupRequest) HasValues() bool {
	if o != nil && !common.IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *PostSavedGroupRequest) SetValues(v []string) {
	o.Values = v
}

// GetAttributeKey returns the AttributeKey field value
func (o *PostSavedGroupRequest) GetAttributeKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeKey
}

// GetAttributeKeyOk returns a tuple with the AttributeKey field value
// and a boolean to check if the value has been set.
func (o *PostSavedGroupRequest) GetAttributeKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeKey, true
}

// SetAttributeKey sets field value
func (o *PostSavedGroupRequest) SetAttributeKey(v string) {
	o.AttributeKey = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PostSavedGroupRequest) GetOwner() string {
	if o == nil || common.IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSavedGroupRequest) GetOwnerOk() (*string, bool) {
	if o == nil || common.IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PostSavedGroupRequest) HasOwner() bool {
	if o != nil && !common.IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *PostSavedGroupRequest) SetOwner(v string) {
	o.Owner = &v
}

func (o PostSavedGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostSavedGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !common.IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !common.IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	toSerialize["attributeKey"] = o.AttributeKey
	if !common.IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

func (o *PostSavedGroupRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"attributeKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostSavedGroupRequest := _PostSavedGroupRequest{}

	err = json.Unmarshal(bytes, &varPostSavedGroupRequest)

	if err != nil {
		return err
	}

	*o = PostSavedGroupRequest(varPostSavedGroupRequest)

	return err
}

type NullablePostSavedGroupRequest struct {
	value *PostSavedGroupRequest
	isSet bool
}

func (v NullablePostSavedGroupRequest) Get() *PostSavedGroupRequest {
	return v.value
}

func (v *NullablePostSavedGroupRequest) Set(val *PostSavedGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSavedGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSavedGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSavedGroupRequest(val *PostSavedGroupRequest) *NullablePostSavedGroupRequest {
	return &NullablePostSavedGroupRequest{value: val, isSet: true}
}

func (v NullablePostSavedGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSavedGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
