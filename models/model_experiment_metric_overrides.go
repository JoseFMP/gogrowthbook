/*
GrowthBook REST API

GrowthBook offers a full REST API for interacting with the GrowthBook application. This is currently in **beta** as we add more authenticated API routes and features.  Request data can use either JSON or Form data encoding (with proper `Content-Type` headers). All response bodies are JSON-encoded.  The API base URL for GrowthBook Cloud is `https://api.growthbook.io`. For self-hosted deployments, it is the same as your API_HOST environment variable (defaults to `http://localhost:3100`). The rest of these docs will assume you are using GrowthBook Cloud.  ## Authentication  We support both the HTTP Basic and Bearer authentication schemes for convenience.  You first need to generate a new API Key in GrowthBook. Different keys have different permissions:  - **Personal Access Tokens**: These are sensitive and provide the same level of access as the user has to an organization. These can be created by going to `Personal Access Tokens` under the your user menu. - **Secret Keys**: These are sensitive and provide the level of access for the role, which currently is either `admin` or `readonly`. Only Admins with the `manageApiKeys` permission can manage Secret Keys on behalf of an organization. These can be created by going to `Settings -> API Keys`  If using HTTP Basic auth, pass the Secret Key as the username and leave the password blank:  ```bash curl https://api.growthbook.io/api/v1 \\   -u secret_abc123DEF456: # The \":\" at the end stops curl from asking for a password ```  If using Bearer auth, pass the Secret Key as the token:  ```bash curl https://api.growthbook.io/api/v1 \\ -H \"Authorization: Bearer secret_abc123DEF456\" ```  ## Errors  The API may return the following error status codes:  - **400** - Bad Request - Often due to a missing required parameter - **401** - Unauthorized - No valid API key provided - **402** - Request Failed - The parameters are valid, but the request failed - **403** - Forbidden - Provided API key does not have the required access - **404** - Not Found - Unknown API route or requested resource - **429** - Too Many Requests - You exceeded the rate limit of 60 requests per minute. Try again later. - **5XX** - Server Error - Something went wrong on GrowthBook's end (these are rare)  The response body will be a JSON object with the following properties:  - **message** - Information about the error

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package models

import (
	"encoding/json"

	"github.com/JoseFMP/gogrowthbook/common"
)

// checks if the ExperimentMetricOverrides type satisfies the common.MappedNullable interface at compile time
var _ common.MappedNullable = &ExperimentMetricOverrides{}

// ExperimentMetricOverrides struct for ExperimentMetricOverrides
type ExperimentMetricOverrides struct {
	ConversionWindowStart interface{} `json:"conversionWindowStart,omitempty"`
	ConversionWindowEnd   interface{} `json:"conversionWindowEnd,omitempty"`
	WinRiskThreshold      interface{} `json:"winRiskThreshold,omitempty"`
	LoseRiskThreshold     interface{} `json:"loseRiskThreshold,omitempty"`
}

// NewExperimentMetricOverrides instantiates a new ExperimentMetricOverrides object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentMetricOverrides() *ExperimentMetricOverrides {
	this := ExperimentMetricOverrides{}
	return &this
}

// NewExperimentMetricOverridesWithDefaults instantiates a new ExperimentMetricOverrides object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentMetricOverridesWithDefaults() *ExperimentMetricOverrides {
	this := ExperimentMetricOverrides{}
	return &this
}

// GetConversionWindowStart returns the ConversionWindowStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentMetricOverrides) GetConversionWindowStart() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ConversionWindowStart
}

// GetConversionWindowStartOk returns a tuple with the ConversionWindowStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentMetricOverrides) GetConversionWindowStartOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.ConversionWindowStart) {
		return nil, false
	}
	return &o.ConversionWindowStart, true
}

// HasConversionWindowStart returns a boolean if a field has been set.
func (o *ExperimentMetricOverrides) HasConversionWindowStart() bool {
	if o != nil && common.IsNil(o.ConversionWindowStart) {
		return true
	}

	return false
}

// SetConversionWindowStart gets a reference to the given interface{} and assigns it to the ConversionWindowStart field.
func (o *ExperimentMetricOverrides) SetConversionWindowStart(v interface{}) {
	o.ConversionWindowStart = v
}

// GetConversionWindowEnd returns the ConversionWindowEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentMetricOverrides) GetConversionWindowEnd() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ConversionWindowEnd
}

// GetConversionWindowEndOk returns a tuple with the ConversionWindowEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentMetricOverrides) GetConversionWindowEndOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.ConversionWindowEnd) {
		return nil, false
	}
	return &o.ConversionWindowEnd, true
}

// HasConversionWindowEnd returns a boolean if a field has been set.
func (o *ExperimentMetricOverrides) HasConversionWindowEnd() bool {
	if o != nil && common.IsNil(o.ConversionWindowEnd) {
		return true
	}

	return false
}

// SetConversionWindowEnd gets a reference to the given interface{} and assigns it to the ConversionWindowEnd field.
func (o *ExperimentMetricOverrides) SetConversionWindowEnd(v interface{}) {
	o.ConversionWindowEnd = v
}

// GetWinRiskThreshold returns the WinRiskThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentMetricOverrides) GetWinRiskThreshold() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.WinRiskThreshold
}

// GetWinRiskThresholdOk returns a tuple with the WinRiskThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentMetricOverrides) GetWinRiskThresholdOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.WinRiskThreshold) {
		return nil, false
	}
	return &o.WinRiskThreshold, true
}

// HasWinRiskThreshold returns a boolean if a field has been set.
func (o *ExperimentMetricOverrides) HasWinRiskThreshold() bool {
	if o != nil && common.IsNil(o.WinRiskThreshold) {
		return true
	}

	return false
}

// SetWinRiskThreshold gets a reference to the given interface{} and assigns it to the WinRiskThreshold field.
func (o *ExperimentMetricOverrides) SetWinRiskThreshold(v interface{}) {
	o.WinRiskThreshold = v
}

// GetLoseRiskThreshold returns the LoseRiskThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExperimentMetricOverrides) GetLoseRiskThreshold() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.LoseRiskThreshold
}

// GetLoseRiskThresholdOk returns a tuple with the LoseRiskThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExperimentMetricOverrides) GetLoseRiskThresholdOk() (*interface{}, bool) {
	if o == nil || common.IsNil(o.LoseRiskThreshold) {
		return nil, false
	}
	return &o.LoseRiskThreshold, true
}

// HasLoseRiskThreshold returns a boolean if a field has been set.
func (o *ExperimentMetricOverrides) HasLoseRiskThreshold() bool {
	if o != nil && common.IsNil(o.LoseRiskThreshold) {
		return true
	}

	return false
}

// SetLoseRiskThreshold gets a reference to the given interface{} and assigns it to the LoseRiskThreshold field.
func (o *ExperimentMetricOverrides) SetLoseRiskThreshold(v interface{}) {
	o.LoseRiskThreshold = v
}

func (o ExperimentMetricOverrides) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExperimentMetricOverrides) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConversionWindowStart != nil {
		toSerialize["conversionWindowStart"] = o.ConversionWindowStart
	}
	if o.ConversionWindowEnd != nil {
		toSerialize["conversionWindowEnd"] = o.ConversionWindowEnd
	}
	if o.WinRiskThreshold != nil {
		toSerialize["winRiskThreshold"] = o.WinRiskThreshold
	}
	if o.LoseRiskThreshold != nil {
		toSerialize["loseRiskThreshold"] = o.LoseRiskThreshold
	}
	return toSerialize, nil
}

type NullableExperimentMetricOverrides struct {
	value *ExperimentMetricOverrides
	isSet bool
}

func (v NullableExperimentMetricOverrides) Get() *ExperimentMetricOverrides {
	return v.value
}

func (v *NullableExperimentMetricOverrides) Set(val *ExperimentMetricOverrides) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentMetricOverrides) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentMetricOverrides) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentMetricOverrides(val *ExperimentMetricOverrides) *NullableExperimentMetricOverrides {
	return &NullableExperimentMetricOverrides{value: val, isSet: true}
}

func (v NullableExperimentMetricOverrides) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentMetricOverrides) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
